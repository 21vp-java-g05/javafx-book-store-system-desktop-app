CREATE TABLE CATEGORY (
	id SERIAL PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	description VARCHAR(255),
	status BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE PUBLISHER (
	id SERIAL PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	description VARCHAR(255),
	status BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE AUTHOR (
	id SERIAL PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	description VARCHAR(255),
	status BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE BOOK (
	id SERIAL PRIMARY KEY,
	title VARCHAR(255) NOT NULL,
	isbn CHAR(13) NOT NULL,
	language VARCHAR(255),
	number_of_pages INT,
	publisher INT NOT NULL,
	author INT NOT NULL,
	status BOOLEAN NOT NULL DEFAULT TRUE,
	
	CONSTRAINT FK_BOOK_PUBLISHER FOREIGN KEY (publisher) REFERENCES PUBLISHER(id),
	CONSTRAINT FK_BOOK_AUTHOR FOREIGN KEY (author) REFERENCES AUTHOR(id)
);

CREATE TABLE CUSTOMER (
	id SERIAL PRIMARY KEY,
	fullname VARCHAR(255) NOT NULL,
	mail VARCHAR(321) UNIQUE NOT NULL,
	gender BOOLEAN NOT NULL,
	status BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE ACCOUNT (
	id SERIAL PRIMARY KEY,
	fullname VARCHAR(255) NOT NULL,
	mail VARCHAR(321) UNIQUE NOT NULL,
	username VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	role INT NOT NULL,
	status BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE IMPORTS (
	id SERIAL PRIMARY KEY,
	import_time TIMESTAMP NOT NULL,
	employee INT NOT NULL,
	total_cost REAL NOT NULL,
	
	CONSTRAINT FK_IMPORTS_ACCOUNT FOREIGN KEY (employee) REFERENCES ACCOUNT(id)
);

CREATE TABLE ORDERS (
	id SERIAL PRIMARY KEY,
	order_time TIMESTAMP NOT NULL,
	employee INT NOT NULL,
	customer INT,
	sale_price REAL NOT NULL,
	
	CONSTRAINT FK_ORDERS_ACCOUNT FOREIGN KEY (employee) REFERENCES ACCOUNT(id),
	CONSTRAINT FK_ORDERS_CUSTOMER FOREIGN KEY (customer) REFERENCES CUSTOMER(id)
);

CREATE TABLE CATEGORY_BOOK (
	category_id INT,
	book_id INT,
	
	CONSTRAINT PK_CATEGORY_BOOK	PRIMARY KEY (category_id, book_id),
	CONSTRAINT FK_CATEGORY_BOOK_CATEGORY FOREIGN KEY (category_id) REFERENCES CATEGORY(id),
	CONSTRAINT FK_CATEGORY_BOOK_BOOK FOREIGN KEY (book_id) REFERENCES BOOK(id)
);

CREATE TABLE IMPORTS_BOOK (
	imports_id INT,
	book_id INT,
	quantity INT NOT NULL,
	import_price REAL NOT NULL,
	remaining INT NOT NULL,
	
	CONSTRAINT PK_IMPORT_BOOK PRIMARY KEY (imports_id, book_id),
	CONSTRAINT FK_IMPORT_BOOK_IMPORT FOREIGN KEY (imports_id) REFERENCES IMPORTS(id),
	CONSTRAINT FK_IMPORT_BOOK_BOOK FOREIGN KEY (book_id) REFERENCES BOOK(id)
);

CREATE TABLE ORDERS_BOOK (
	orders_id INT,
	book_id INT,
	quantity INT NOT NULL,
	price REAL NOT NULL,
	
	CONSTRAINT PK_ORDERS_BOOK PRIMARY KEY (orders_id, book_id),
	CONSTRAINT FK_ORDERS_BOOK_IMPORT FOREIGN KEY (orders_id) REFERENCES ORDERS(id),
	CONSTRAINT FK_ORDERS_BOOK_BOOK FOREIGN KEY (book_id) REFERENCES BOOK(id)
);

CREATE FUNCTION defaultRemaining() RETURNS INT
LANGUAGE SQL
RETURN (SELECT quantity FROM IMPORTS_BOOK);

ALTER TABLE IMPORTS_BOOK ALTER COLUMN remaining SET DEFAULT defaultRemaining();